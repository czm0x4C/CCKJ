; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o4gcamera\usbd_cdc_if.o --asm_dir=.\ --list_dir=.\ --depend=4gcamera\usbd_cdc_if.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../USB_DEVICE/App -I../USB_DEVICE/Target -I../Core/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I../Middlewares/ST/STM32_USB_Device_Library/Core/Inc -I../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Middlewares/Third_Party/FreeRTOS/Source/include -I../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2 -I../Middlewares/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM4F -I../HARDWARE/OV2640 -I../HARDWARE/WS2812B -I../HARDWARE/RING_BUFFER -I../HARDWARE/FLASH -I.\RTE\_4GCAMERA -IC:\Users\czm\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\czm\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=536 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F407xx --omf_browse=4gcamera\usbd_cdc_if.crf ../USB_DEVICE/App/usbd_cdc_if.c]
                          THUMB

                          AREA ||i.CDC_Control_HS||, CODE, READONLY, ALIGN=1

                  CDC_Control_HS PROC
;;;183      */
;;;184    static int8_t CDC_Control_HS(uint8_t cmd, uint8_t* pbuf, uint16_t length)
000000  4603              MOV      r3,r0
;;;185    {
;;;186      /* USER CODE BEGIN 10 */
;;;187      switch(cmd)
000002  2b04              CMP      r3,#4
000004  d015              BEQ      |L1.50|
000006  dc07              BGT      |L1.24|
000008  b17b              CBZ      r3,|L1.42|
00000a  2b01              CMP      r3,#1
00000c  d00e              BEQ      |L1.44|
00000e  2b02              CMP      r3,#2
000010  d00d              BEQ      |L1.46|
000012  2b03              CMP      r3,#3
000014  d112              BNE      |L1.60|
000016  e00b              B        |L1.48|
                  |L1.24|
000018  2b20              CMP      r3,#0x20
00001a  d00b              BEQ      |L1.52|
00001c  2b21              CMP      r3,#0x21
00001e  d00a              BEQ      |L1.54|
000020  2b22              CMP      r3,#0x22
000022  d009              BEQ      |L1.56|
000024  2b23              CMP      r3,#0x23
000026  d109              BNE      |L1.60|
000028  e007              B        |L1.58|
                  |L1.42|
;;;188      {
;;;189      case CDC_SEND_ENCAPSULATED_COMMAND:
;;;190    
;;;191        break;
00002a  e008              B        |L1.62|
                  |L1.44|
;;;192    
;;;193      case CDC_GET_ENCAPSULATED_RESPONSE:
;;;194    
;;;195        break;
00002c  e007              B        |L1.62|
                  |L1.46|
;;;196    
;;;197      case CDC_SET_COMM_FEATURE:
;;;198    
;;;199        break;
00002e  e006              B        |L1.62|
                  |L1.48|
;;;200    
;;;201      case CDC_GET_COMM_FEATURE:
;;;202    
;;;203        break;
000030  e005              B        |L1.62|
                  |L1.50|
;;;204    
;;;205      case CDC_CLEAR_COMM_FEATURE:
;;;206    
;;;207        break;
000032  e004              B        |L1.62|
                  |L1.52|
;;;208    
;;;209      /*******************************************************************************/
;;;210      /* Line Coding Structure                                                       */
;;;211      /*-----------------------------------------------------------------------------*/
;;;212      /* Offset | Field       | Size | Value  | Description                          */
;;;213      /* 0      | dwDTERate   |   4  | Number |Data terminal rate, in bits per second*/
;;;214      /* 4      | bCharFormat |   1  | Number | Stop bits                            */
;;;215      /*                                        0 - 1 Stop bit                       */
;;;216      /*                                        1 - 1.5 Stop bits                    */
;;;217      /*                                        2 - 2 Stop bits                      */
;;;218      /* 5      | bParityType |  1   | Number | Parity                               */
;;;219      /*                                        0 - None                             */
;;;220      /*                                        1 - Odd                              */
;;;221      /*                                        2 - Even                             */
;;;222      /*                                        3 - Mark                             */
;;;223      /*                                        4 - Space                            */
;;;224      /* 6      | bDataBits  |   1   | Number Data bits (5, 6, 7, 8 or 16).          */
;;;225      /*******************************************************************************/
;;;226      case CDC_SET_LINE_CODING:
;;;227    
;;;228        break;
000034  e003              B        |L1.62|
                  |L1.54|
;;;229    
;;;230      case CDC_GET_LINE_CODING:
;;;231    
;;;232        break;
000036  e002              B        |L1.62|
                  |L1.56|
;;;233    
;;;234      case CDC_SET_CONTROL_LINE_STATE:
;;;235    
;;;236        break;
000038  e001              B        |L1.62|
                  |L1.58|
;;;237    
;;;238      case CDC_SEND_BREAK:
;;;239    
;;;240        break;
00003a  e000              B        |L1.62|
                  |L1.60|
;;;241    
;;;242      default:
;;;243        break;
00003c  bf00              NOP      
                  |L1.62|
00003e  bf00              NOP                            ;191
;;;244      }
;;;245    
;;;246      return (USBD_OK);
000040  2000              MOVS     r0,#0
;;;247      /* USER CODE END 10 */
;;;248    }
000042  4770              BX       lr
;;;249    
                          ENDP


                          AREA ||i.CDC_DeInit_HS||, CODE, READONLY, ALIGN=1

                  CDC_DeInit_HS PROC
;;;169      */
;;;170    static int8_t CDC_DeInit_HS(void)
000000  2000              MOVS     r0,#0
;;;171    {
;;;172      /* USER CODE BEGIN 9 */
;;;173      return (USBD_OK);
;;;174      /* USER CODE END 9 */
;;;175    }
000002  4770              BX       lr
;;;176    
                          ENDP


                          AREA ||i.CDC_Init_HS||, CODE, READONLY, ALIGN=2

                  CDC_Init_HS PROC
;;;154      */
;;;155    static int8_t CDC_Init_HS(void)
000000  b510              PUSH     {r4,lr}
;;;156    {
;;;157      /* USER CODE BEGIN 8 */
;;;158      /* Set Application Buffers */
;;;159      USBD_CDC_SetTxBuffer(&hUsbDeviceHS, UserTxBufferHS, 0);
000002  2200              MOVS     r2,#0
000004  4904              LDR      r1,|L3.24|
000006  4805              LDR      r0,|L3.28|
000008  f7fffffe          BL       USBD_CDC_SetTxBuffer
;;;160      USBD_CDC_SetRxBuffer(&hUsbDeviceHS, UserRxBufferHS);
00000c  4904              LDR      r1,|L3.32|
00000e  4803              LDR      r0,|L3.28|
000010  f7fffffe          BL       USBD_CDC_SetRxBuffer
;;;161      return (USBD_OK);
000014  2000              MOVS     r0,#0
;;;162      /* USER CODE END 8 */
;;;163    }
000016  bd10              POP      {r4,pc}
;;;164    
                          ENDP

                  |L3.24|
                          DCD      UserTxBufferHS
                  |L3.28|
                          DCD      hUsbDeviceHS
                  |L3.32|
                          DCD      UserRxBufferHS

                          AREA ||i.CDC_Receive_HS||, CODE, READONLY, ALIGN=2

                  CDC_Receive_HS PROC
;;;264      */
;;;265    static int8_t CDC_Receive_HS(uint8_t* Buf, uint32_t *Len)
000000  b570              PUSH     {r4-r6,lr}
;;;266    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;267      /* USER CODE BEGIN 11 */
;;;268      USBD_CDC_SetRxBuffer(&hUsbDeviceHS, &Buf[0]);
000006  4621              MOV      r1,r4
000008  4806              LDR      r0,|L4.36|
00000a  f7fffffe          BL       USBD_CDC_SetRxBuffer
;;;269      USBD_CDC_ReceivePacket(&hUsbDeviceHS);
00000e  4805              LDR      r0,|L4.36|
000010  f7fffffe          BL       USBD_CDC_ReceivePacket
;;;270    	
;;;271    	WriteBytes(&VCP_RxRingBuffer,Buf,*Len);//VCP接收数据写入环形缓冲区中等待解析
000014  8828              LDRH     r0,[r5,#0]
000016  b282              UXTH     r2,r0
000018  4621              MOV      r1,r4
00001a  4803              LDR      r0,|L4.40|
00001c  f7fffffe          BL       WriteBytes
;;;272    //	HAL_UART_Transmit(&huart1,Buf,*Len,0xFFFFFFFF);//转发USB 虚拟串口的数据给USART1
;;;273      return (USBD_OK);
000020  2000              MOVS     r0,#0
;;;274      /* USER CODE END 11 */
;;;275    }
000022  bd70              POP      {r4-r6,pc}
;;;276    
                          ENDP

                  |L4.36|
                          DCD      hUsbDeviceHS
                  |L4.40|
                          DCD      VCP_RxRingBuffer

                          AREA ||i.CDC_TransmitCplt_HS||, CODE, READONLY, ALIGN=1

                  CDC_TransmitCplt_HS PROC
;;;309      */
;;;310    static int8_t CDC_TransmitCplt_HS(uint8_t *Buf, uint32_t *Len, uint8_t epnum)
000000  b510              PUSH     {r4,lr}
;;;311    {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;312      uint8_t result = USBD_OK;
000006  2100              MOVS     r1,#0
;;;313      /* USER CODE BEGIN 14 */
;;;314      UNUSED(Buf);
;;;315      UNUSED(Len);
;;;316      UNUSED(epnum);
;;;317      /* USER CODE END 14 */
;;;318      return result;
000008  4608              MOV      r0,r1
;;;319    }
00000a  bd10              POP      {r4,pc}
;;;320    
                          ENDP


                          AREA ||i.CDC_Transmit_HS||, CODE, READONLY, ALIGN=2

                  CDC_Transmit_HS PROC
;;;283      */
;;;284    uint8_t CDC_Transmit_HS(uint8_t* Buf, uint16_t Len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;285    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;286      uint8_t result = USBD_OK;
000008  2600              MOVS     r6,#0
;;;287      /* USER CODE BEGIN 12 */
;;;288      USBD_CDC_HandleTypeDef *hcdc = (USBD_CDC_HandleTypeDef*)hUsbDeviceHS.pClassData;
00000a  480a              LDR      r0,|L6.52|
00000c  f8d072bc          LDR      r7,[r0,#0x2bc]  ; hUsbDeviceHS
;;;289      if (hcdc->TxState != 0){
000010  f8d70214          LDR      r0,[r7,#0x214]
000014  b110              CBZ      r0,|L6.28|
;;;290        return USBD_BUSY;
000016  2001              MOVS     r0,#1
                  |L6.24|
;;;291      }
;;;292      USBD_CDC_SetTxBuffer(&hUsbDeviceHS, Buf, Len);
;;;293      result = USBD_CDC_TransmitPacket(&hUsbDeviceHS);
;;;294      /* USER CODE END 12 */
;;;295      return result;
;;;296    }
000018  e8bd81f0          POP      {r4-r8,pc}
                  |L6.28|
00001c  462a              MOV      r2,r5                 ;292
00001e  4621              MOV      r1,r4                 ;292
000020  4804              LDR      r0,|L6.52|
000022  f7fffffe          BL       USBD_CDC_SetTxBuffer
000026  4803              LDR      r0,|L6.52|
000028  f7fffffe          BL       USBD_CDC_TransmitPacket
00002c  4606              MOV      r6,r0                 ;293
00002e  4630              MOV      r0,r6                 ;295
000030  e7f2              B        |L6.24|
;;;297    
                          ENDP

000032  0000              DCW      0x0000
                  |L6.52|
                          DCD      hUsbDeviceHS

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  UserRxBufferHS
                          %        2048
                  UserTxBufferHS
                          %        2048

                          AREA ||.data||, DATA, ALIGN=2

                  USBD_Interface_fops_HS
                          DCD      CDC_Init_HS
                          DCD      CDC_DeInit_HS
                          DCD      CDC_Control_HS
                          DCD      CDC_Receive_HS
                          DCD      CDC_TransmitCplt_HS

;*** Start embedded assembler ***

#line 1 "../USB_DEVICE/App/usbd_cdc_if.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_usbd_cdc_if_c_cc69dd98____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___13_usbd_cdc_if_c_cc69dd98____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_usbd_cdc_if_c_cc69dd98____REVSH|
#line 478
|__asm___13_usbd_cdc_if_c_cc69dd98____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___13_usbd_cdc_if_c_cc69dd98____RRX|
#line 665
|__asm___13_usbd_cdc_if_c_cc69dd98____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
