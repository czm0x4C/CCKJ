; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o4gcamera\stm32f4xx_hal_timebase_tim.o --asm_dir=.\ --list_dir=.\ --depend=4gcamera\stm32f4xx_hal_timebase_tim.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../USB_DEVICE/App -I../USB_DEVICE/Target -I../Core/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I../Middlewares/ST/STM32_USB_Device_Library/Core/Inc -I../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Middlewares/Third_Party/FreeRTOS/Source/include -I../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2 -I../Middlewares/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM4F -I../HARDWARE/OV2640 -I../HARDWARE/WS2812B -I../HARDWARE/RING_BUFFER -I../HARDWARE/FLASH -I.\RTE\_4GCAMERA -IC:\Users\czm\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\czm\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=536 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F407xx --omf_browse=4gcamera\stm32f4xx_hal_timebase_tim.crf ../Core/Src/stm32f4xx_hal_timebase_tim.c]
                          THUMB

                          AREA ||i.HAL_InitTick||, CODE, READONLY, ALIGN=2

                  HAL_InitTick PROC
;;;40       */
;;;41     HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;42     {
000004  b088              SUB      sp,sp,#0x20
000006  4604              MOV      r4,r0
;;;43       RCC_ClkInitTypeDef    clkconfig;
;;;44       uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
000008  2700              MOVS     r7,#0
;;;45     
;;;46       uint32_t              uwPrescalerValue = 0U;
00000a  46b8              MOV      r8,r7
;;;47       uint32_t              pFLatency;
;;;48       HAL_StatusTypeDef     status;
;;;49     
;;;50       /* Enable TIM14 clock */
;;;51       __HAL_RCC_TIM14_CLK_ENABLE();
00000c  bf00              NOP      
00000e  2000              MOVS     r0,#0
000010  9001              STR      r0,[sp,#4]
000012  4823              LDR      r0,|L1.160|
000014  6800              LDR      r0,[r0,#0]
000016  f4407080          ORR      r0,r0,#0x100
00001a  4921              LDR      r1,|L1.160|
00001c  6008              STR      r0,[r1,#0]
00001e  4608              MOV      r0,r1
000020  6800              LDR      r0,[r0,#0]
000022  f4007080          AND      r0,r0,#0x100
000026  9001              STR      r0,[sp,#4]
000028  bf00              NOP      
00002a  bf00              NOP      
;;;52     
;;;53       /* Get clock configuration */
;;;54       HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
00002c  a902              ADD      r1,sp,#8
00002e  a803              ADD      r0,sp,#0xc
000030  f7fffffe          BL       HAL_RCC_GetClockConfig
;;;55     
;;;56       /* Get APB1 prescaler */
;;;57       uwAPB1Prescaler = clkconfig.APB1CLKDivider;
000034  9f06              LDR      r7,[sp,#0x18]
;;;58       /* Compute TIM14 clock */
;;;59       if (uwAPB1Prescaler == RCC_HCLK_DIV1)
000036  b91f              CBNZ     r7,|L1.64|
;;;60       {
;;;61         uwTimclock = HAL_RCC_GetPCLK1Freq();
000038  f7fffffe          BL       HAL_RCC_GetPCLK1Freq
00003c  4605              MOV      r5,r0
00003e  e002              B        |L1.70|
                  |L1.64|
;;;62       }
;;;63       else
;;;64       {
;;;65         uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
000040  f7fffffe          BL       HAL_RCC_GetPCLK1Freq
000044  0045              LSLS     r5,r0,#1
                  |L1.70|
;;;66       }
;;;67     
;;;68       /* Compute the prescaler value to have TIM14 counter clock equal to 1MHz */
;;;69       uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
000046  4817              LDR      r0,|L1.164|
000048  fbb5f0f0          UDIV     r0,r5,r0
00004c  f1a00801          SUB      r8,r0,#1
;;;70     
;;;71       /* Initialize TIM14 */
;;;72       htim14.Instance = TIM14;
000050  4815              LDR      r0,|L1.168|
000052  4916              LDR      r1,|L1.172|
000054  6008              STR      r0,[r1,#0]  ; htim14
;;;73     
;;;74       /* Initialize TIMx peripheral as follow:
;;;75     
;;;76       + Period = [(TIM14CLK/1000) - 1]. to have a (1/1000) s time base.
;;;77       + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
;;;78       + ClockDivision = 0
;;;79       + Counter direction = Up
;;;80       */
;;;81       htim14.Init.Period = (1000000U / 1000U) - 1U;
000056  f24031e7          MOV      r1,#0x3e7
00005a  4814              LDR      r0,|L1.172|
00005c  60c1              STR      r1,[r0,#0xc]
;;;82       htim14.Init.Prescaler = uwPrescalerValue;
00005e  f8c08004          STR      r8,[r0,#4]  ; htim14
;;;83       htim14.Init.ClockDivision = 0;
000062  2100              MOVS     r1,#0
000064  6101              STR      r1,[r0,#0x10]
;;;84       htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
000066  6081              STR      r1,[r0,#8]
;;;85       htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
000068  6181              STR      r1,[r0,#0x18]
;;;86     
;;;87       status = HAL_TIM_Base_Init(&htim14);
00006a  f7fffffe          BL       HAL_TIM_Base_Init
00006e  4606              MOV      r6,r0
;;;88       if (status == HAL_OK)
000070  b996              CBNZ     r6,|L1.152|
;;;89       {
;;;90         /* Start the TIM time Base generation in interrupt mode */
;;;91         status = HAL_TIM_Base_Start_IT(&htim14);
000072  480e              LDR      r0,|L1.172|
000074  f7fffffe          BL       HAL_TIM_Base_Start_IT
000078  4606              MOV      r6,r0
;;;92         if (status == HAL_OK)
00007a  b96e              CBNZ     r6,|L1.152|
;;;93         {
;;;94         /* Enable the TIM14 global Interrupt */
;;;95             HAL_NVIC_EnableIRQ(TIM8_TRG_COM_TIM14_IRQn);
00007c  202d              MOVS     r0,#0x2d
00007e  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;96           /* Configure the SysTick IRQ priority */
;;;97           if (TickPriority < (1UL << __NVIC_PRIO_BITS))
000082  2c10              CMP      r4,#0x10
000084  d207              BCS      |L1.150|
;;;98           {
;;;99             /* Configure the TIM IRQ priority */
;;;100            HAL_NVIC_SetPriority(TIM8_TRG_COM_TIM14_IRQn, TickPriority, 0U);
000086  2200              MOVS     r2,#0
000088  4621              MOV      r1,r4
00008a  202d              MOVS     r0,#0x2d
00008c  f7fffffe          BL       HAL_NVIC_SetPriority
;;;101            uwTickPrio = TickPriority;
000090  4807              LDR      r0,|L1.176|
000092  6004              STR      r4,[r0,#0]  ; uwTickPrio
000094  e000              B        |L1.152|
                  |L1.150|
;;;102          }
;;;103          else
;;;104          {
;;;105            status = HAL_ERROR;
000096  2601              MOVS     r6,#1
                  |L1.152|
;;;106          }
;;;107        }
;;;108      }
;;;109    
;;;110     /* Return function status */
;;;111      return status;
000098  4630              MOV      r0,r6
;;;112    }
00009a  b008              ADD      sp,sp,#0x20
00009c  e8bd81f0          POP      {r4-r8,pc}
;;;113    
                          ENDP

                  |L1.160|
                          DCD      0x40023840
                  |L1.164|
                          DCD      0x000f4240
                  |L1.168|
                          DCD      0x40002000
                  |L1.172|
                          DCD      htim14
                  |L1.176|
                          DCD      uwTickPrio

                          AREA ||i.HAL_ResumeTick||, CODE, READONLY, ALIGN=2

                  HAL_ResumeTick PROC
;;;131      */
;;;132    void HAL_ResumeTick(void)
000000  4804              LDR      r0,|L2.20|
;;;133    {
;;;134      /* Enable TIM14 Update interrupt */
;;;135      __HAL_TIM_ENABLE_IT(&htim14, TIM_IT_UPDATE);
000002  6800              LDR      r0,[r0,#0]  ; htim14
000004  68c0              LDR      r0,[r0,#0xc]
000006  f0400001          ORR      r0,r0,#1
00000a  4902              LDR      r1,|L2.20|
00000c  6809              LDR      r1,[r1,#0]  ; htim14
00000e  60c8              STR      r0,[r1,#0xc]
;;;136    }
000010  4770              BX       lr
;;;137    
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      htim14

                          AREA ||i.HAL_SuspendTick||, CODE, READONLY, ALIGN=2

                  HAL_SuspendTick PROC
;;;119      */
;;;120    void HAL_SuspendTick(void)
000000  4804              LDR      r0,|L3.20|
;;;121    {
;;;122      /* Disable TIM14 update Interrupt */
;;;123      __HAL_TIM_DISABLE_IT(&htim14, TIM_IT_UPDATE);
000002  6800              LDR      r0,[r0,#0]  ; htim14
000004  68c0              LDR      r0,[r0,#0xc]
000006  f0200001          BIC      r0,r0,#1
00000a  4902              LDR      r1,|L3.20|
00000c  6809              LDR      r1,[r1,#0]  ; htim14
00000e  60c8              STR      r0,[r1,#0xc]
;;;124    }
000010  4770              BX       lr
;;;125    
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      htim14

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  htim14
                          %        72

;*** Start embedded assembler ***

#line 1 "../Core/Src/stm32f4xx_hal_timebase_tim.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___28_stm32f4xx_hal_timebase_tim_c_2a3ab6ca____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___28_stm32f4xx_hal_timebase_tim_c_2a3ab6ca____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___28_stm32f4xx_hal_timebase_tim_c_2a3ab6ca____REVSH|
#line 478
|__asm___28_stm32f4xx_hal_timebase_tim_c_2a3ab6ca____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___28_stm32f4xx_hal_timebase_tim_c_2a3ab6ca____RRX|
#line 665
|__asm___28_stm32f4xx_hal_timebase_tim_c_2a3ab6ca____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
