; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o4gcamera\usart.o --asm_dir=.\ --list_dir=.\ --depend=4gcamera\usart.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931 -I../USB_DEVICE/App -I../USB_DEVICE/Target -I../Core/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc -I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy -I../Middlewares/ST/STM32_USB_Device_Library/Core/Inc -I../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc -I../Drivers/CMSIS/Device/ST/STM32F4xx/Include -I../Drivers/CMSIS/Include -I../Middlewares/Third_Party/FreeRTOS/Source/include -I../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2 -I../Middlewares/Third_Party/FreeRTOS/Source/portable/RVDS/ARM_CM4F -I../HARDWARE/OV2640 -I../HARDWARE/WS2812B -I../HARDWARE/RING_BUFFER -I../HARDWARE/FLASH -I.\RTE\_4GCAMERA -IC:\Users\czm\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\czm\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.13.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=536 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F407xx --omf_browse=4gcamera\usart.crf ../Core/Src/usart.c]
                          THUMB

                          AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspDeInit PROC
;;;93     
;;;94     void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
000000  b510              PUSH     {r4,lr}
;;;95     {
000002  4604              MOV      r4,r0
;;;96     
;;;97       if(uartHandle->Instance==USART1)
000004  4909              LDR      r1,|L1.44|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d10d              BNE      |L1.40|
;;;98       {
;;;99       /* USER CODE BEGIN USART1_MspDeInit 0 */
;;;100    
;;;101      /* USER CODE END USART1_MspDeInit 0 */
;;;102        /* Peripheral clock disable */
;;;103        __HAL_RCC_USART1_CLK_DISABLE();
00000c  4808              LDR      r0,|L1.48|
00000e  6800              LDR      r0,[r0,#0]
000010  f0200010          BIC      r0,r0,#0x10
000014  4906              LDR      r1,|L1.48|
000016  6008              STR      r0,[r1,#0]
;;;104    
;;;105        /**USART1 GPIO Configuration
;;;106        PA9     ------> USART1_TX
;;;107        PA10     ------> USART1_RX
;;;108        */
;;;109        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
000018  f44f61c0          MOV      r1,#0x600
00001c  4805              LDR      r0,|L1.52|
00001e  f7fffffe          BL       HAL_GPIO_DeInit
;;;110    
;;;111        /* USART1 interrupt Deinit */
;;;112        HAL_NVIC_DisableIRQ(USART1_IRQn);
000022  2025              MOVS     r0,#0x25
000024  f7fffffe          BL       HAL_NVIC_DisableIRQ
                  |L1.40|
;;;113      /* USER CODE BEGIN USART1_MspDeInit 1 */
;;;114    
;;;115      /* USER CODE END USART1_MspDeInit 1 */
;;;116      }
;;;117    }
000028  bd10              POP      {r4,pc}
;;;118    
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40011000
                  |L1.48|
                          DCD      0x40023844
                  |L1.52|
                          DCD      0x40020000

                          AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspInit PROC
;;;60     
;;;61     void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
000000  b510              PUSH     {r4,lr}
;;;62     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;63     
;;;64       GPIO_InitTypeDef GPIO_InitStruct = {0};
000006  2114              MOVS     r1,#0x14
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       __aeabi_memclr4
;;;65       if(uartHandle->Instance==USART1)
00000e  491f              LDR      r1,|L2.140|
000010  6820              LDR      r0,[r4,#0]
000012  4288              CMP      r0,r1
000014  d138              BNE      |L2.136|
;;;66       {
;;;67       /* USER CODE BEGIN USART1_MspInit 0 */
;;;68     
;;;69       /* USER CODE END USART1_MspInit 0 */
;;;70         /* USART1 clock enable */
;;;71         __HAL_RCC_USART1_CLK_ENABLE();
000016  bf00              NOP      
000018  2000              MOVS     r0,#0
00001a  9000              STR      r0,[sp,#0]
00001c  481c              LDR      r0,|L2.144|
00001e  6800              LDR      r0,[r0,#0]
000020  f0400010          ORR      r0,r0,#0x10
000024  491a              LDR      r1,|L2.144|
000026  6008              STR      r0,[r1,#0]
000028  4608              MOV      r0,r1
00002a  6800              LDR      r0,[r0,#0]
00002c  f0000010          AND      r0,r0,#0x10
000030  9000              STR      r0,[sp,#0]
000032  bf00              NOP      
000034  bf00              NOP      
;;;72     
;;;73         __HAL_RCC_GPIOA_CLK_ENABLE();
000036  bf00              NOP      
000038  2000              MOVS     r0,#0
00003a  9000              STR      r0,[sp,#0]
00003c  4814              LDR      r0,|L2.144|
00003e  3814              SUBS     r0,r0,#0x14
000040  6800              LDR      r0,[r0,#0]
000042  f0400001          ORR      r0,r0,#1
000046  4912              LDR      r1,|L2.144|
000048  3914              SUBS     r1,r1,#0x14
00004a  6008              STR      r0,[r1,#0]
00004c  4608              MOV      r0,r1
00004e  6800              LDR      r0,[r0,#0]
000050  f0000001          AND      r0,r0,#1
000054  9000              STR      r0,[sp,#0]
000056  bf00              NOP      
000058  bf00              NOP      
;;;74         /**USART1 GPIO Configuration
;;;75         PA9     ------> USART1_TX
;;;76         PA10     ------> USART1_RX
;;;77         */
;;;78         GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
00005a  f44f60c0          MOV      r0,#0x600
00005e  9001              STR      r0,[sp,#4]
;;;79         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000060  2002              MOVS     r0,#2
000062  9002              STR      r0,[sp,#8]
;;;80         GPIO_InitStruct.Pull = GPIO_NOPULL;
000064  2000              MOVS     r0,#0
000066  9003              STR      r0,[sp,#0xc]
;;;81         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
000068  2003              MOVS     r0,#3
00006a  9004              STR      r0,[sp,#0x10]
;;;82         GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
00006c  2007              MOVS     r0,#7
00006e  9005              STR      r0,[sp,#0x14]
;;;83         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000070  a901              ADD      r1,sp,#4
000072  4808              LDR      r0,|L2.148|
000074  f7fffffe          BL       HAL_GPIO_Init
;;;84     
;;;85         /* USART1 interrupt Init */
;;;86         HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
000078  2200              MOVS     r2,#0
00007a  2105              MOVS     r1,#5
00007c  2025              MOVS     r0,#0x25
00007e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;87         HAL_NVIC_EnableIRQ(USART1_IRQn);
000082  2025              MOVS     r0,#0x25
000084  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L2.136|
;;;88       /* USER CODE BEGIN USART1_MspInit 1 */
;;;89     
;;;90       /* USER CODE END USART1_MspInit 1 */
;;;91       }
;;;92     }
000088  b006              ADD      sp,sp,#0x18
00008a  bd10              POP      {r4,pc}
;;;93     
                          ENDP

                  |L2.140|
                          DCD      0x40011000
                  |L2.144|
                          DCD      0x40023844
                  |L2.148|
                          DCD      0x40020000

                          AREA ||i.HAL_UART_RxCpltCallback||, CODE, READONLY, ALIGN=2

                  HAL_UART_RxCpltCallback PROC
;;;120    unsigned char uartTempData = 0;
;;;121    void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
000000  b510              PUSH     {r4,lr}
;;;122    {
000002  4604              MOV      r4,r0
;;;123      /* Prevent unused argument(s) compilation warning */
;;;124      if(huart->Instance==USART1)
000004  490b              LDR      r1,|L3.52|
000006  6820              LDR      r0,[r4,#0]
000008  4288              CMP      r0,r1
00000a  d111              BNE      |L3.48|
;;;125      {
;;;126        HAL_UART_Receive_IT(&huart1,&uartTempData,1);
00000c  2201              MOVS     r2,#1
00000e  490a              LDR      r1,|L3.56|
000010  480a              LDR      r0,|L3.60|
000012  f7fffffe          BL       HAL_UART_Receive_IT
;;;127    		if(1 == anlysis)
000016  480a              LDR      r0,|L3.64|
000018  7800              LDRB     r0,[r0,#0]  ; anlysis
00001a  2801              CMP      r0,#1
00001c  d104              BNE      |L3.40|
;;;128    			WriteBytes(&UART_RxRingBuffer,&uartTempData,1);//USART1接收数据写入环形缓冲区中等待解析
00001e  2201              MOVS     r2,#1
000020  4905              LDR      r1,|L3.56|
000022  4808              LDR      r0,|L3.68|
000024  f7fffffe          BL       WriteBytes
                  |L3.40|
;;;129    		CDC_Transmit_HS(&uartTempData,1);//USART1接收数据转发到VCP发送
000028  2101              MOVS     r1,#1
00002a  4803              LDR      r0,|L3.56|
00002c  f7fffffe          BL       CDC_Transmit_HS
                  |L3.48|
;;;130    	}
;;;131      /* NOTE: This function should not be modified, when the callback is needed,
;;;132               the HAL_UART_RxCpltCallback could be implemented in the user file
;;;133       */
;;;134    }
000030  bd10              POP      {r4,pc}
;;;135    /* USER CODE END 1 */
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x40011000
                  |L3.56|
                          DCD      uartTempData
                  |L3.60|
                          DCD      huart1
                  |L3.64|
                          DCD      anlysis
                  |L3.68|
                          DCD      UART_RxRingBuffer

                          AREA ||i.MX_USART1_UART_Init||, CODE, READONLY, ALIGN=2

                  MX_USART1_UART_Init PROC
;;;32     
;;;33     void MX_USART1_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;34     {
;;;35     
;;;36       /* USER CODE BEGIN USART1_Init 0 */
;;;37     
;;;38       /* USER CODE END USART1_Init 0 */
;;;39     
;;;40       /* USER CODE BEGIN USART1_Init 1 */
;;;41     
;;;42       /* USER CODE END USART1_Init 1 */
;;;43       huart1.Instance = USART1;
000002  480b              LDR      r0,|L4.48|
000004  490b              LDR      r1,|L4.52|
000006  6008              STR      r0,[r1,#0]  ; huart1
;;;44       huart1.Init.BaudRate = 115200;
000008  f44f30e1          MOV      r0,#0x1c200
00000c  6048              STR      r0,[r1,#4]  ; huart1
;;;45       huart1.Init.WordLength = UART_WORDLENGTH_8B;
00000e  2100              MOVS     r1,#0
000010  4808              LDR      r0,|L4.52|
000012  6081              STR      r1,[r0,#8]
;;;46       huart1.Init.StopBits = UART_STOPBITS_1;
000014  60c1              STR      r1,[r0,#0xc]
;;;47       huart1.Init.Parity = UART_PARITY_NONE;
000016  6101              STR      r1,[r0,#0x10]
;;;48       huart1.Init.Mode = UART_MODE_TX_RX;
000018  210c              MOVS     r1,#0xc
00001a  6141              STR      r1,[r0,#0x14]
;;;49       huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
00001c  2100              MOVS     r1,#0
00001e  6181              STR      r1,[r0,#0x18]
;;;50       huart1.Init.OverSampling = UART_OVERSAMPLING_16;
000020  61c1              STR      r1,[r0,#0x1c]
;;;51       if (HAL_UART_Init(&huart1) != HAL_OK)
000022  f7fffffe          BL       HAL_UART_Init
000026  b108              CBZ      r0,|L4.44|
;;;52       {
;;;53         Error_Handler();
000028  f7fffffe          BL       Error_Handler
                  |L4.44|
;;;54       }
;;;55       /* USER CODE BEGIN USART1_Init 2 */
;;;56     
;;;57       /* USER CODE END USART1_Init 2 */
;;;58     
;;;59     }
00002c  bd10              POP      {r4,pc}
;;;60     
                          ENDP

00002e  0000              DCW      0x0000
                  |L4.48|
                          DCD      0x40011000
                  |L4.52|
                          DCD      huart1

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  huart1
                          %        68

                          AREA ||.data||, DATA, ALIGN=0

                  uartTempData
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "../Core/Src/usart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_aa2567c7____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___7_usart_c_aa2567c7____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_aa2567c7____REVSH|
#line 478
|__asm___7_usart_c_aa2567c7____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_aa2567c7____RRX|
#line 665
|__asm___7_usart_c_aa2567c7____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
